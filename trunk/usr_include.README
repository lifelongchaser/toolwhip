Apple /usr/include files to build cctools and ld64 on non-Macs
Mark Mentovai
2009 March 5

WHAT?
-----
To build cctools and ld64 on non-Macs, some additional headers from the Mac
OS SDK are needed.  The SDKs are supplied with Xcode Tools, available from
http://connect.apple.com/ .

The script below will take the necessary headers, patch them appropriately,
and package them up into usr_include.tar.bz2.  This should be unpacked next
to the cctools or ld64 directory on the non-Mac system on which you wish to
build the Apple cctools or ld64.

Run the script below on any system that has the Mac OS X 10.5 SDK in
/Developer/SDKs/MacOSX10.5.sdk.  Macs running 10.5 (or later?) with Xcode
installed will suffice.

ACKNOWLEDGEMENTS
----------------
This is similar to odcctools, http://odcctools.darwinports.com/.  odcctools
has not been updated in over two years and does not apply to the latest
toolchain, such as the 10.5/Xcode 3 toolchain.  Some portions of odcctools
were consulted in developing these patches.

OK, ENOUGH ALREADY
------------------
Put usr_include.patch in /tmp and run this:

cd /Developer/SDKs/MacOSX10.5.sdk/usr/include
rm -rf /tmp/usr_include
rsync -a i386 architecture libkern mach mach-o mach_debug machine sys/_types.h /tmp/usr_include/
cd /tmp
patch -p0 < /tmp/usr_include.patch
find usr_include -name '*.h' -type f -exec sed -i '' -E -e 's/__unused/__attribute__((__unused__))/g' {} \;
cat > usr_include/libc.h << __EOF__
#ifndef _LIBC_H
#define _LIBC_H

#include <fcntl.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/param.h>

#endif
__EOF__
tar jcf usr_include.tar.bz2 usr_include
