#summary The pending tasks to be done for distcc

The pending tasks for the distcc work
  * finish up --hostinfo - mark
  * -isysroot/-sysroot
     * distcc cmdline needs to make sure we only get one of these at a time
     * index_server needs to collect it and use it when collecting compiler defaults
        * add another dimension for roots or combine them w/ the compiler or arch to build the key for lookup.
     * if distcc is doing cpp on the server
        * strip the sysroot argument because the link serve.c:tweak_arguments_for_server will prefix all the flags for us and we don't want all our absolute paths rooted again
     * if distcc is doing cpp on client
        * strip.c:dcc_strip_local_args needs to remove the sysroot since  it's not needed
     * open issues:
        * by appling sysroots for sdks, we need to deal w/ the xcode developer dir in what we send over the wire, it's not clear how to do this yet.  maybe there is something in the gcc install location support?
  * split out include dirs from framework dirs
  * see if we need to beef up -F support in the include server
     * interleave them with -I
     * teach the include server to look in the Frameworks's Headers dir.
  * -iheader/-iframework need to match like -I/-F
  * reintegrate xcodedistcc advertisement via dns_sd (apple)/avahi (linux)
  * what happens if you pass already-preprocessed input like .i and .ii to the include server?
  * move the language bits into helper objects so we don't have to repeat so much in the tests
  * in the symlink farm, we need to handle the dev tools install dir, and when recreating the links on the other machine, make sure they are done as that machine needs them. see the open issue nder isysroot/sysroot
  * remove GNU Make-ism (filter-out) from Makefile, move the logic into configure.  Make -DXCODE_INTEGRATION something that configure knows how to set.

done:
  * -x support
     * -x in distcc/distccd -- code and tests added
     * -x in include_server -- parse_command already picks it all up, and compiler_defaults moves it along collecting the system dirs correctly.
  * probably don't need to do anything with these except stop collecting -arch:
     * -arch support in the include_server doesn't seem to do anything w/ what it collects
     * -arch support probably needs to support building >1 arch at a time like gcc does.
  * -include - already worked, added test case
  * double check DashONoSpace_Case since gcc -ofoo -c foo.c seems to work?
  * don't force a .d file to be created on the server since it can conflict w/ more then one -arch option.
  * --hostinfo compiler version reporting
  * fix paths in debug info for Mach-O files

Things to point out to apple
  * the gcc version must also bump if the sdks change in any way due to how system headers are moved over the wire, they need to match between all machines so they see the same headers.

Things to point out to distcc
  * The include_server requirement that client_root contain exactly three components is ludicrous.  Rather than having distcc strip off exactly three components from the beginnings of paths to see inside the client root, the include_server should communicate its client_root back to distcc, so that distcc knows exactly what to strip off.